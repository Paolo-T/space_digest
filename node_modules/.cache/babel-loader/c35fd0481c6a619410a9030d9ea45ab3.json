{"ast":null,"code":"var _jsxFileName = \"/Users/ptodde/Desktop/space-digest/src/components/Image.js\";\nimport React, { Component } from \"react\";\n\nclass Image extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      image: null\n    };\n  }\n\n  async componentDidMount() {\n    fetch((await \"/images/image1\")).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        image: json\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      image\n    } = this.state;\n    console.log(image);\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"img\", {\n        src: image.url,\n        alt: \"Something\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Image;","map":{"version":3,"sources":["/Users/ptodde/Desktop/space-digest/src/components/Image.js"],"names":["React","Component","Image","constructor","props","state","error","isLoaded","image","componentDidMount","fetch","then","res","json","setState","render","console","log","message","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AACD,QAAMC,iBAAN,GAA0B;AACtBC,IAAAA,KAAK,EAAC,MAAM,gBAAP,EAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUE,IAAI,IAAI;AACV,WAAKC,QAAL,CAAc;AACVP,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEK;AAFG,OAAd;AAIH,KAPL;AAQH;;AACDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AACA,QAAIF,KAAJ,EAAW;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaA,KAAK,CAACY,OAAnB,CAAP;AACH,KAFD,MAEO,IAAI,CAACX,QAAL,EAAe;AAClB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFM,MAEA;AACH,aAAO;AAAK,QAAA,GAAG,EAAEC,KAAK,CAACW,GAAhB;AAAqB,QAAA,GAAG,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ;;AA7ByB;;AA+B9B,eAAejB,KAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Image extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            image: null\n        };\n    }\n    async componentDidMount() {\n        fetch(await \"/images/image1\")\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    isLoaded: true,\n                    image: json\n                });\n            });\n    }\n    render() {\n        const { error, isLoaded, image } = this.state;\n        console.log(image);\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return <img src={image.url} alt=\"Something\" />;\n        }\n    }\n}\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}